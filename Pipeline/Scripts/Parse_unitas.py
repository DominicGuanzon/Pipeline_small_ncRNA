"""

Parse Unitas outputs to combine all samples into one file.

Steps to do)
Find file name


"""

import glob
import pandas as pd
import os
from functools import reduce

# Find paths for files needing to be parsed.
data_path = "Unitas_annotated_reads/"
Annotation_summary_paths = glob.glob("**/unitas.annotation_summary.txt", recursive=True)
Hit_target_paths = glob.glob("**/unitas.hits_per_target.txt", recursive=True)
TRF_simplified_paths = glob.glob("**/unitas.tRF-table.simplified.txt", recursive=True)
TRF_table_paths = glob.glob("**/unitas.tRF-table.txt", recursive=True)
Full_annotation_paths = glob.glob("**/unitas.full_annotation_matrix.txt", recursive=True)

data = []

for csv in Annotation_summary_paths:
frame = pd.read_csv(csv, sep = "\t", names=["RNA_species", "Counts"])

# This extracts the filename from the folder name generated by Unitas and renames counts column
frame = frame.rename(columns = {"Counts": os.path.basename(os.path.dirname(csv).split("_", 2)[2]).rsplit("_", 1)[0]})

# Calculate total reads for % calculations for sample
full_annotation_temp = [s for s in Full_annotation_paths if os.path.dirname(csv) in s]
full_annotation_temp = pd.read_csv(full_annotation_temp[0], sep = "\t", usecols = ["reads"])

# Find index of genomic_tRNA and mitochondrial tRNA
genomic_tRNA = frame.RNA_species[frame.RNA_species.str.contains("genomic_tRNA")].index
mitochondrial_tRNA = frame.RNA_species[frame.RNA_species.str.contains("Mt_tRNA")].index

# Extract N + positions and add prefix to make unique.
if len(genomic_tRNA) > 0:
    range_mod = range(genomic_tRNA[0] + 1, genomic_tRNA[0] + 9)
    tag_name = frame["RNA_species"].iloc[range_mod].tolist()
    tag_name = [s + "_gtRNA" for s in tag_name]
    frame.loc[range_mod, "RNA_species"] = tag_name

if len(mitochondrial_tRNA) > 0:
    range_mod = range(mitochondrial_tRNA[0] + 1, mitochondrial_tRNA[0] + 9)
    tag_name = frame["RNA_species"].iloc[range_mod].tolist()
    tag_name = [s + "_mtRNA" for s in tag_name]
    frame.loc[range_mod, "RNA_species"] = tag_name

data.append(frame)


df_merged = reduce(lambda  left,right: pd.merge(left,right,on=["RNA_species"], how="outer"), data)
def do_something(data_path, out_path):


